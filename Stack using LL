#include<stdlib.h>
#include<stdio.h>

struct node
{
    int data;
    struct node *next;
}*head=NULL,*temp=NULL,*newnode,*top=NULL;

void create()
{
    if(top==NULL)
    {
        newnode = (struct node*)malloc(sizeof(struct node));
        newnode->next = NULL;
        printf("Enter the data: ");
        scanf("%d",&newnode->data);
        head = top = newnode;
        display();
    }
    else
    {
        printf("Stack is already created!!");
    }
}

void push()
{
    if(head==NULL)
    {
        create();
    }
    else
    {
        newnode = (struct node*)malloc(sizeof(struct node));
        newnode->next = NULL;
        printf("Enter the data: ");
        scanf("%d",&newnode->data);
        top = head;
        while(top->next!=NULL)
        {
            top = top->next;
        }
        top->next = newnode;
        top = newnode;
        display();
    }
}

void pop()
{
    struct node *prenode;
    temp = head;
    while(temp->next!=NULL)
    {
        prenode = temp;
        temp = temp->next;
    }
    prenode->next = NULL;
    top = prenode;
    printf("The deleted element is: %d",temp->data);
    free(temp);
    display();
}

void display()
{
    if(head==NULL)
    {
        printf("The Stack is empty\n");
    }
    else
    {
        temp = head;
        printf("\nThe Stack elements are: ");
        while(temp!=NULL)
        {
            printf("%d--->",temp->data);
            temp = temp->next;
        }
    }
}

int main()
{
    int choice;
    while(1)
    {
        printf("\n***************MENU****************\n");
        printf("\n1. Create a Stack");
        printf("\n2. Push");
        printf("\n3. Pop");
        printf("\n4. Display");
        printf("\n\nEnter your choice: ");
        scanf("%d",&choice);
        switch(choice)
        {
            case 1:
                create();
                break;
            case 2:
                push();
                break;
            case 3:
                pop();
                break;
            case 4:
                display();
                break;
            default:
                printf("\nInvalid Choice\n");
                break;
        }
    }
    return 0;
}
